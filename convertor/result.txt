{
  "base_url": "http://localhost:5173/login",
  "source_code": [
    {
      "name": "+page.svelte",
      "path": "/Users/khxo/Desktop/persornal/project/THESIS/LLM-SYSTEM/NEW/app-backend/convertor/+page.svelte",
      "content": "<script> import ImageCarousel from '$lib/components/image-carousel.svelte'; import LoginForm from '$lib/components/login-form.svelte'; </script> <!-- Updated layout to use flexbox for two-column design --> <main class=\"min-h-screen flex\"> <ImageCarousel /> <LoginForm /> </main>"
    },
    {
      "name": "image-carousel.svelte",
      "path": "/Users/khxo/Desktop/persornal/project/THESIS/LLM-SYSTEM/NEW/app-backend/convertor/image-carousel.svelte",
      "content": "<script> let currentSlide = $state(0); let carouselInterval = $state(null); import carouselImage from '$lib/assets/placeholder.svg'; const slides = [ { image: carouselImage, title: \"Capturing Moments,\", subtitle: \"Creating Memories\" }, { image: carouselImage, title: \"Discover Beauty,\", subtitle: \"Share Your Story\" }, { image: carouselImage, title: \"Explore Nature,\", subtitle: \"Find Your Path\" } ]; function startCarousel() { carouselInterval = setInterval(() => { currentSlide = (currentSlide + 1) % slides.length; }, 5000); } function stopCarousel() { if (carouselInterval) { clearInterval(carouselInterval); carouselInterval = null; } } function goToSlide(index) { currentSlide = index; stopCarousel(); startCarousel(); } // Start carousel when component mounts $effect(() => { startCarousel(); return () => stopCarousel(); }); </script> <div class=\"hidden lg:flex lg:w-1/2 relative overflow-hidden\"> <div class=\"absolute inset-0 bg-gradient-to-br from-purple-600 via-purple-700 to-indigo-800\"> {#each slides as slide, index} <img src={slide.image || \"/placeholder.svg\"} alt=\"Slide {index + 1}\" class=\"w-full h-full object-cover opacity-60 absolute inset-0 transition-opacity duration-1000 {currentSlide === index ? 'opacity-60' : 'opacity-0'}\" /> {/each} </div> <!-- Logo --> <div class=\"absolute top-8 left-8 z-10\"> <div class=\"text-white text-2xl font-bold tracking-wider\">WEBSITE</div> </div> <!-- Back to website button --> <div class=\"absolute top-8 right-8 z-10\"> <button class=\"px-4 py-2 text-white border border-white/30 rounded-md hover:bg-white/10 transition-colors flex items-center gap-2\"> Back to website <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\" /> </svg> </button> </div> <!-- Content --> <div class=\"absolute bottom-16 left-8 right-8 z-10\"> <h1 class=\"text-white text-4xl font-bold mb-4 leading-tight transition-all duration-500\"> {slides[currentSlide].title}<br /> {slides[currentSlide].subtitle} </h1> <!-- Interactive pagination dots --> <div class=\"flex space-x-2 mt-8\"> {#each slides as _, index} <button onclick={() => goToSlide(index)} class=\"w-8 h-1 rounded transition-all duration-300 {currentSlide === index ? 'bg-white' : 'bg-white/40 hover:bg-white/60'}\" aria-label={`Go to slide ${index + 1}`} ></button> {/each} </div> </div> </div>"
    },
    {
      "name": "login-form.svelte",
      "path": "/Users/khxo/Desktop/persornal/project/THESIS/LLM-SYSTEM/NEW/app-backend/convertor/login-form.svelte",
      "content": "<script lang=\"ts\"> import { Button } from '$lib/components/ui/button'; import { Input } from '$lib/components/ui/input'; import { Label } from '$lib/components/ui/label'; import { IconEye, IconEyeOff, IconBrandGoogleFilled, IconBrandLinkedinFilled, IconBrandGithub } from '@tabler/icons-svelte'; // state let email: string = ''; let password: string = ''; let showPassword: boolean = false; let emailError: string = ''; let passwordError: string = ''; // regex const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/; // validate helpers function validateEmail(value: string): string { return emailRegex.test(value) ? '' : 'กรุณากรอกอีเมลให้ถูกต้อง'; } function validatePassword(value: string): string { return passwordRegex.test(value) ? '' : 'รหัสผ่านต้อง ≥ 8 ตัว มีตัวพิมพ์เล็ก/ใหญ่ ตัวเลข และอักขระพิเศษ'; } function handleSubmit(event: Event) { event.preventDefault(); emailError = validateEmail(email); passwordError = validatePassword(password); if (!emailError && !passwordError) { console.log('Login attempt:', { email, password }); } } function handleSocialLogin(provider: string) { console.log(`${provider} login clicked`); } $: isFormValid = email && password && !emailError && !passwordError; </script> <div class=\"w-full lg:w-1/2 flex items-center justify-center p-8 bg-gray-900\"> <div class=\"w-full max-w-md space-y-6\"> <!-- Header --> <div class=\"text-center\"> <h2 class=\"text-3xl font-bold text-white mb-2\">Welcome back</h2> <p class=\"text-gray-400\">Sign in to your account</p> </div> <!-- Login form --> <form onsubmit={handleSubmit} class=\"space-y-4\"> <!-- Email --> <div class=\"space-y-2\"> <Label for=\"email\" class=\"text-gray-300\">Email</Label> <Input id=\"email\" type=\"email\" bind:value={email} placeholder=\"Enter your email\" class=\"bg-gray-800 border-gray-700 text-white placeholder-gray-500 focus:border-purple-500\" required onblur={() => (emailError = validateEmail(email))} /> {#if emailError} <p class=\"text-red-400 text-sm\" role=\"alert\">{emailError}</p> {/if} </div> <!-- Password --> <div class=\"space-y-2\"> <Label for=\"password\" class=\"text-gray-300\">Password</Label> <div class=\"relative\"> <Input id=\"password\" type={showPassword ? 'text' : 'password'} bind:value={password} placeholder=\"Enter your password\" class=\"bg-gray-800 border-gray-700 text-white placeholder-gray-500 pr-10\" required onblur={() => (passwordError = validatePassword(password))} /> <button type=\"button\" onclick={() => (showPassword = !showPassword)} class=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-300\" aria-label={showPassword ? 'Hide password' : 'Show password'} > {#if showPassword} <IconEye /> {:else} <IconEyeOff /> {/if} </button> </div> {#if passwordError} <p class=\"text-red-400 text-sm\" role=\"alert\">{passwordError}</p> {/if} </div> <!-- Forgot password --> <div class=\"text-right\"> <button type=\"button\" class=\"text-sm text-purple-400 hover:text-purple-300 underline\" > Forgot password? </button> </div> <!-- Submit --> <Button type=\"submit\" class=\"w-full bg-purple-600 hover:bg-purple-700 text-white py-3\" disabled={!isFormValid} > Sign in </Button> </form> <!-- Divider --> <div class=\"relative\"> <div class=\"absolute inset-0 flex items-center\"> <div class=\"w-full border-t border-gray-700\"></div> </div> <div class=\"relative flex justify-center text-sm\"> <span class=\"px-2 bg-gray-900 text-gray-400\">Or sign in with</span> </div> </div> <!-- Social Login Buttons --> <div class=\"grid grid-cols-3 gap-3\"> <Button variant=\"outline\" onclick={() => handleSocialLogin('Google')} class=\"bg-gray-800 border-gray-700 hover:bg-gray-700 text-white\" aria-label=\"Sign in with Google\" > <IconBrandGoogleFilled /> </Button> <Button variant=\"outline\" onclick={() => handleSocialLogin('GitHub')} class=\"bg-gray-800 border-gray-700 hover:bg-gray-700 text-white\" aria-label=\"Sign in with GitHub\" > <IconBrandGithub /> </Button> <Button variant=\"outline\" onclick={() => handleSocialLogin('LinkedIn')} class=\"bg-gray-800 border-gray-700 hover:bg-gray-700 text-white\" aria-label=\"Sign in with LinkedIn\" > <IconBrandLinkedinFilled /> </Button> </div> </div> </div>"
    }
  ]
}